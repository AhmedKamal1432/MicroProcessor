# Loading project MicroProcessor
# Compile of decoder_2x4.vhd was successful.
# Compile of tri_state_buffer.vhd was successful.
# Compile of Register.vhd was successful.
# Compile of Control_Store.vhd was successful.
# Compile of Decoding_Circuit.vhd was successful.
# Compile of my_3x8Decoder.vhd was successful.
# Compile of Oring.vhd was successful.
# Compile of Pla_Circuit.vhd failed with 4 errors.
# 8 compiles, 1 failed with 4 errors. 
# Compile of Pla_Circuit.vhd failed with 2 errors.
# Compile of Pla_Circuit.vhd was successful with warnings.
# Compile of decoder_2x4.vhd was successful.
# Compile of tri_state_buffer.vhd was successful.
# Compile of Register.vhd was successful.
# Compile of Control_Store.vhd was successful.
# Compile of Decoding_Circuit.vhd was successful.
# Compile of my_3x8Decoder.vhd was successful.
# Compile of Oring.vhd was successful.
# Compile of Pla_Circuit.vhd was successful.
# 8 compiles, 0 failed with no errors. 
# reading /home/ahmed/altera/13.1/modelsim_ase/linuxaloem/../modelsim.ini
# Loading project Arch
# Error opening /home/ahmed/MicroProcessor/arch_project/C:/Users/FeZe/Desktop/arch_project/Control_Unit.vhd
# Path name '/home/ahmed/MicroProcessor/arch_project/C:/Users/FeZe/Desktop/arch_project/Control_Unit.vhd' doesn't exist.
# 0 compiles, 21 failed with no errors. 
# reading /home/ahmed/altera/13.1/modelsim_ase/linuxaloem/../modelsim.ini
# Loading project MicroProcessor
# Compile of decoder_2x4.vhd was successful.
# Compile of tri_state_buffer.vhd was successful.
# Compile of Control_Store.vhd was successful.
# Compile of Decoding_Circuit.vhd was successful.
# Compile of my_3x8Decoder.vhd was successful.
# Compile of Oring.vhd was successful.
# Compile of Pla_Circuit.vhd was successful.
# Compile of A.vhd was successful.
# Compile of ALSU.vhd was successful.
# Compile of B.vhd was successful.
# Compile of C.vhd was successful.
# Compile of Control_Unit.vhd was successful.
# Compile of CPU.vhd was successful.
# Compile of D.vhd was successful.
# Compile of mux_df.vhd was successful.
# Compile of mux_seq.vhd was successful.
# Compile of my_2x4Decoder.vhd was successful.
# Compile of my_4x16Decoder.vhd was successful.
# Compile of my_adder.vhd was successful.
# Compile of my_nadder.vhd was successful.
# Compile of nReg.vhd was successful.
# Compile of ram.vhd was successful.
# Compile of Reg.vhd was successful.
# 23 compiles, 0 failed with no errors. 
# Compile of CPU.vhd was successful.
# Compile of ram.vhd was successful.
# 2 compiles, 0 failed with no errors. 
vsim work.cpu(arch)
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# ** Failure: (vsim-3817) Port "e" of entity "tri_state_buffer" is not in the component being instantiated.
#    Time: 0 ps  Iteration: 0  Instance: /cpu/TriR0 File: /home/ahmed/MicroProcessor/tri_state_buffer.vhd Line: 6
# ** Error: (vsim-3732) /home/ahmed/MicroProcessor/CPU.vhd(98): No default binding for component instance 'TriR0'.
#    The following component port is not on the entity:
#           EN
#         Region: /cpu/TriR0
# Fatal error in file /home/ahmed/MicroProcessor/tri_state_buffer.vhd
#  while elaborating region: /cpu/TriR0
# Load interrupted
# Error loading design
# Compile of CPU.vhd was successful.
vsim work.cpu(arch)
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# ** Failure: (vsim-3817) Port "a1" of entity "alsu" is not in the component being instantiated.
#    Time: 0 ps  Iteration: 0  Instance: /cpu/ALU File: /home/ahmed/MicroProcessor/ALSU.vhd Line: 4
# ** Failure: (vsim-3817) Port "a2" of entity "alsu" is not in the component being instantiated.
#    Time: 0 ps  Iteration: 0  Instance: /cpu/ALU File: /home/ahmed/MicroProcessor/ALSU.vhd Line: 4
# ** Error: (vsim-3732) /home/ahmed/MicroProcessor/CPU.vhd(119): No default binding for component instance 'ALU'.
#    The following component ports are not on the entity:
#           Zero
#           OV
#           Neg
#           F
#           b
#           a
#         Region: /cpu/ALU
# Loading work.b(arch1)
# ** Fatal: Bad library format, library not compiled with ALTERA compiler.
#    Time: 0 ps  Iteration: 0  Instance: /cpu/ALU/u0 File: /home/ahmed/MicroProcessor/ALSU.vhd Line: 59
# FATAL ERROR while loading design
# Error loading design
# Compile of CPU.vhd failed with 1 errors.
# Compile of CPU.vhd failed with 1 errors.
# Compile of CPU.vhd was successful.
vsim work.cpu(arch)
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
add wave -position insertpoint  \
sim:/cpu/CLK \
sim:/cpu/Rst \
sim:/cpu/IR \
sim:/cpu/R0in \
sim:/cpu/R1in \
sim:/cpu/R2in \
sim:/cpu/R3in \
sim:/cpu/R0out \
sim:/cpu/R1out \
sim:/cpu/R2out \
sim:/cpu/R3out \
sim:/cpu/PCout \
sim:/cpu/MDRout \
sim:/cpu/Zout \
sim:/cpu/RSRCout \
sim:/cpu/RDSTout \
sim:/cpu/SOURCEout \
sim:/cpu/DESTINout \
sim:/cpu/TEMPout \
sim:/cpu/PCin \
sim:/cpu/IRin \
sim:/cpu/Zin \
sim:/cpu/RSRCin \
sim:/cpu/RDSTin \
sim:/cpu/MARin \
sim:/cpu/MDRin \
sim:/cpu/TEMPin \
sim:/cpu/Yin \
sim:/cpu/SOURCEin \
sim:/cpu/DESTINin \
sim:/cpu/RD \
sim:/cpu/WR \
sim:/cpu/CLEARY \
sim:/cpu/CARRYin \
sim:/cpu/FLAGS_E \
sim:/cpu/ALSU_SIGNALS \
sim:/cpu/mdrINPUT \
sim:/cpu/ramOUT \
sim:/cpu/buss \
sim:/cpu/AfromY \
sim:/cpu/Z \
sim:/cpu/ramIN \
sim:/cpu/ADD \
sim:/cpu/R00out \
sim:/cpu/R11out \
sim:/cpu/R22out \
sim:/cpu/R33out \
sim:/cpu/Srcout \
sim:/cpu/Destout \
sim:/cpu/Tout \
sim:/cpu/Z_value_out \
sim:/cpu/Flags \
sim:/cpu/mdrENABLE \
sim:/cpu/MFC \
sim:/cpu/selection \
sim:/cpu/CLRY
force -freeze sim:/cpu/CLK 1 0, 0 {50 ps} -r 100
force -freeze sim:/cpu/Rst 1 0
# Compile of decoder_2x4.vhd was successful.
# Compile of tri_state_buffer.vhd was successful.
# Compile of Control_Store.vhd was successful.
# Compile of Decoding_Circuit.vhd was successful.
# Compile of my_3x8Decoder.vhd was successful.
# Compile of Oring.vhd was successful.
# Compile of Pla_Circuit.vhd was successful.
# Compile of A.vhd was successful.
# Compile of ALSU.vhd was successful.
# Compile of B.vhd was successful.
# Compile of C.vhd was successful.
# Compile of Control_Unit.vhd was successful.
# Compile of CPU.vhd was successful.
# Compile of D.vhd was successful.
# Compile of mux_df.vhd was successful.
# Compile of mux_seq.vhd was successful.
# Compile of my_2x4Decoder.vhd was successful.
# Compile of my_4x16Decoder.vhd was successful.
# Compile of my_adder.vhd was successful.
# Compile of my_nadder.vhd was successful.
# Compile of nReg.vhd was successful.
# Compile of ram.vhd was successful.
# Compile of Reg.vhd was successful.
# 23 compiles, 0 failed with no errors. 
quit -sim
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# ** Error: invalid command name "sim:/cpu/ADD"
# Error in macro ./cpu_test.do line 37
# invalid command name "sim:/cpu/ADD"
#     while executing
# "sim:/cpu/ADD \
# sim:/cpu/mdrINPUT \
# sim:/cpu/ramIN \
# "
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
force -freeze sim:/cpu/CLK 1 0, 0 {50 ps} -r 100
force -freeze sim:/cpu/Rst 1 0
run
force -freeze sim:/cpu/Rst 0 0
run
run
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 250 ps  Iteration: 0  Instance: /cpu/MEMORY
run
# Compile of Control_Unit.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 250 ps  Iteration: 0  Instance: /cpu/MEMORY
# Compile of Control_Unit.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 250 ps  Iteration: 0  Instance: /cpu/MEMORY
# Compile of Control_Unit.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of Control_Store.vhd was successful.
# Compile of CPU.vhd was successful.
# 2 compiles, 0 failed with no errors. 
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of CPU.vhd was successful.
# Compile of ram.vhd was successful.
# 2 compiles, 0 failed with no errors. 
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of CPU.vhd was successful.
# ** Error: (vish-4014) No objects found matching '/cpu/True_Flags'.
# Error in macro ./cpu_test.do line 84
# (vish-4014) No objects found matching '/cpu/True_Flags'.
#     while executing
# "add wave -position insertpoint  \
# sim:/cpu/CLK \
# sim:/cpu/Rst \
# sim:/cpu/IR \
# sim:/cpu/buss \
# sim:/cpu/ADD \
# sim:/cpu/mdrINPUT \
# sim:/cpu/ramIN \
# sim:..."
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
quit -sim
quit -sim
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of decoder_2x4.vhd was successful.
# Compile of tri_state_buffer.vhd was successful.
# Compile of Control_Store.vhd was successful.
# Compile of Decoding_Circuit.vhd was successful.
# Compile of my_3x8Decoder.vhd was successful.
# Compile of Oring.vhd was successful.
# Compile of Pla_Circuit.vhd was successful.
# Compile of A.vhd was successful.
# Compile of ALSU.vhd was successful.
# Compile of B.vhd was successful.
# Compile of C.vhd was successful.
# Compile of Control_Unit.vhd was successful.
# Compile of CPU.vhd was successful.
# Compile of D.vhd was successful.
# Compile of mux_df.vhd was successful.
# Compile of mux_seq.vhd was successful.
# Compile of my_2x4Decoder.vhd was successful.
# Compile of my_4x16Decoder.vhd was successful.
# Compile of my_adder.vhd was successful.
# Compile of my_nadder.vhd was successful.
# Compile of nReg.vhd was successful.
# Compile of ram.vhd was successful.
# Compile of Reg.vhd was successful.
# 23 compiles, 0 failed with no errors. 
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
quit -sim
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of CPU.vhd was successful.
# Compile of ram.vhd was successful.
# 2 compiles, 0 failed with no errors. 
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
step
run
step
run
run
step
run
step
# Compile of Control_Unit.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
# Compile of ALSU.vhd failed with 1 errors.
# Compile of ALSU.vhd failed with 1 errors.
# Compile of ALSU.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
# Compile of Control_Store.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
# Compile of Control_Store.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of ram.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
# Compile of Control_Unit.vhd was successful.
# Compile of CPU.vhd was successful.
# 2 compiles, 0 failed with no errors. 
# Compile of ram.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 250 ps  Iteration: 1  Instance: /cpu/MEMORY
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 550 ps  Iteration: 0  Instance: /cpu/CU/CS_Label
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 250 ps  Iteration: 1  Instance: /cpu/MEMORY
run
run
run
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 550 ps  Iteration: 0  Instance: /cpu/CU/CS_Label
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of ram.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 250 ps  Iteration: 1  Instance: /cpu/MEMORY
run
run
run
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 550 ps  Iteration: 0  Instance: /cpu/CU/CS_Label
run
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 650 ps  Iteration: 1  Instance: /cpu/MEMORY
# Compile of ram.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of CPU.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of CPU.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 250 ps  Iteration: 1  Instance: /cpu/MEMORY
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of Control_Store.vhd was successful.
# Compile of CPU.vhd was successful.
# 2 compiles, 0 failed with no errors. 
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
# ** Warning: NUMERIC_STD.TO_INTEGER: metavalue detected, returning 0
#    Time: 250 ps  Iteration: 0  Instance: /cpu/MEMORY
# Compile of ram.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of Control_Unit.vhd was successful.
# Compile of CPU.vhd was successful.
# 2 compiles, 0 failed with no errors. 
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of Control_Store.vhd was successful.
# Compile of ram.vhd was successful.
# 2 compiles, 0 failed with no errors. 
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
# Compile of Control_Unit.vhd was successful.
# Compile of CPU.vhd was successful.
# 2 compiles, 0 failed with no errors. 
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
run
run
run
# WARNING: No extended dataflow license exists
# Compile of ram.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
add wave  \
sim:/cpu/CU/uAR
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
run
run
run
run
# Compile of Control_Store.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
# Compile of decoder_2x4.vhd was successful.
# Compile of tri_state_buffer.vhd was successful.
# Compile of Control_Store.vhd was successful.
# Compile of Decoding_Circuit.vhd was successful.
# Compile of my_3x8Decoder.vhd was successful.
# Compile of Oring.vhd was successful.
# Compile of Pla_Circuit.vhd was successful.
# Compile of A.vhd was successful.
# Compile of ALSU.vhd was successful.
# Compile of B.vhd was successful.
# Compile of C.vhd was successful.
# Compile of Control_Unit.vhd was successful.
# Compile of CPU.vhd was successful.
# Compile of D.vhd was successful.
# Compile of mux_df.vhd was successful.
# Compile of mux_seq.vhd was successful.
# Compile of my_2x4Decoder.vhd was successful.
# Compile of my_4x16Decoder.vhd was successful.
# Compile of my_adder.vhd was successful.
# Compile of my_nadder.vhd was successful.
# Compile of nReg.vhd was successful.
# Compile of ram.vhd was successful.
# Compile of Reg.vhd was successful.
# 23 compiles, 0 failed with no errors. 
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
run
# Compile of Control_Store.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
mem save -o /home/ahmed/Desktop/ram.mem -f mti -data symbolic -addr hex /cpu/MEMORY/ram
run
mem save -o /home/ahmed/Desktop/ram.mem -f mti -data symbolic -addr hex /cpu/MEMORY/ram
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
# Compile of CPU.vhd was successful.
do cpu_test.do
# vsim work.cpu(arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.cpu(arch)
# Loading work.control_unit(arch)
# Loading work.my_nreg(arch_my_nreg)
# Loading work.my_reg(a_my_reg)
# Loading ieee.numeric_std(body)
# Loading work.control_store(control_store)
# Loading work.decoding_circuit(arch_decoding_circuit)
# Loading work.my_3x8decoder(a_my_3x8decoder)
# Loading work.oring(a_oring)
# Loading work.pla_circuit(a_pla_circuit)
# Loading work.my_4x16decoder(a_my_4x16decoder)
# Loading work.my_2x4decoder(a_my_2x4decoder)
# Loading work.tri_state_buffer(arch)
# Loading work.alsu(arch4)
# Loading work.b(arch1)
# Loading work.c(arch2)
# Loading work.d(arch3)
# Loading work.a(arch10)
# Loading work.my_nadder(a_my_nadder)
# Loading work.my_adder(a_my_adder)
# Loading work.mux4(data_flow)
# Loading work.ram(syncrama)
# Compile of ram.vhd was successful.
